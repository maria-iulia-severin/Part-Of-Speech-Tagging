<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        H6fDjxSGNUONAAAAAElFTkSuQmCC
</value>
  </data>
</root>